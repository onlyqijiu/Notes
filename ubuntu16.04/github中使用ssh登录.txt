//linux 
初次安装git配置用户名和邮箱

原文链接：https://www.cnblogs.com/superGG1990/p/6844952.html
注：在使用git remote -V 时要在github仓库中
 

初次安装git需要配置用户名和邮箱，否则git会提示：please tell me who you are.

你需要运行命令来配置你的用户名和邮箱：

$ git config --global user.name "superGG1990"

$ git config --global user.email "superGG1990@163.com"
注意：（引号内请输入你自己设置的名字，和你自己的邮箱）此用户名和邮箱是git提交代码时用来显示你身份和联系方式的，并不是github用户名和邮箱
git使用ssh密钥
 

git支持https和git两种传输协议，github分享链接时会有两种协议可选：

git协议链接图例 : ↓

https协议链接图例：↓

       
git使用https协议，每次pull, push都会提示要输入密码，使用git协议，然后使用ssh密钥，这样免去每次都输密码的麻烦
 
初次使用git的用户要使用git协议大概需要三个步骤：
一、生成密钥对
二、设置远程仓库（本文以github为例）上的公钥
三、把git的 remote url 修改为git协议（以上两个步骤初次设置过以后，以后使用都不需要再次设置，此步骤视以后项目的remote url而定，如果以后其他项目的协议为https则需要此步骤）
 一、生成密钥对

大多数 Git 服务器都会选择使用 SSH 公钥来进行授权。系统中的每个用户都必须提供一个公钥用于授权，没有的话就要生成一个。生成公钥的过程在所有操作系统上都差不多。首先你要确认一下本机是否已经有一个公钥。

SSH 公钥默认储存在账户的主目录下的 ~/.ssh 目录。进去看看：

$ cd ~/.ssh
$ ls
authorized_keys2  id_dsa       known_hosts config            id_dsa.pub

看一下有没有id_rsa和id_rsa.pub(或者是id_dsa和id_dsa.pub之类成对的文件)，有 .pub 后缀的文件就是公钥，另一个文件则是密钥。

假如没有这些文件，甚至连 .ssh 目录都没有，可以用 ssh-keygen 来创建。该程序在 Linux/Mac 系统上由 SSH 包提供，而在 Windows 上则包含在 MSysGit 包里：

$ ssh-keygen -t rsa -C "your_email@youremail.com"

Creates a new ssh key using the provided email # Generating public/private rsa key pair.

Enter file in which to save the key (/home/you/.ssh/id_rsa):

直接按Enter就行。然后，会提示你输入密码，如下(建议输一个，安全一点，当然不输也行，应该不会有人闲的无聊冒充你去修改你的代码)：

Enter same passphrase again: [Type passphrase again]

完了之后，大概是这样：

Your public key has been saved in /home/you/.ssh/id_rsa.pub.
The key fingerprint is: # 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@youremail.com

到此为止，你本地的密钥对就生成了。
二、添加公钥到你的远程仓库（github）

 

 1、查看你生成的公钥：

$ cat ~/.ssh/id_rsa.pub

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0X6L1zLL4VHuvGb8aJH3ippTozmReSUzgntvk434aJ/v7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8vR3c8E7CjZN733f5AL8uEYJA+YZevY5UCvEg+umT7PHghKYaJwaCxV7sjYP7Z6V79OMCEAGDNXC26IBMdMgOluQjp6o6j2KAdtRBdCDS/QIU5THQDxJ9lBXjk1fiq9tITo/aXBvjZeD+gH/Apkh/0GbO8VQLiYYmNfqqAHHeXdltORn8N7C9lOa/UW3KM7QdXo6J0GFlBVQeTE/IGqhMS5PMln3 admin@admin-PC

2、登陆你的github帐户。点击你的头像，然后 Settings -> 左栏点击 SSH and GPG keys -> 点击 New SSH key

3、然后你复制上面的公钥内容，粘贴进“Key”文本域内。 title域，自己随便起个名字。

4、点击 Add key。

完成以后，验证下这个key是不是正常工作：

$ ssh -T git@github.com

Attempts to ssh to github

如果，看到：

Hi xxx! You've successfully authenticated, but GitHub does not # provide shell access.

恭喜你，你的设置已经成功了。
三、修改git的remote url

 

 使用命令 git remote -v 查看你当前的 remote url

$ git remote -v
origin https://github.com/someaccount/someproject.git (fetch)
origin https://github.com/someaccount/someproject.git (push)

如果是以上的结果那么说明此项目是使用https协议进行访问的（如果地址是git开头则表示是git协议）

你可以登陆你的github，就像本文开头的图例，你在上面可以看到你的ssh协议相应的url，类似：

 

复制此ssh链接，然后使用命令 git remote set-url 来调整你的url。

git remote set-url origin git@github.com:someaccount/someproject.git

然后你可以再用命令 git remote -v 查看一下，url是否已经变成了ssh地址。

然后你就可以愉快的使用git fetch, git pull , git push，再也不用输入烦人的密码了




//windows10
第一步：检查SSH Keys
首先，我们要检查你电脑 上已经存在的SSH Keys，打开你的GitBash，输入

$ cd ~/.ssh

$ ls -al

#列出你的.SSH目录中的文件

 如果用户目录 没有.ssh这个目录 说明你没有。（这句是我加的）

检查目录列表里面是否有文件名为id_rsa.pub 或 id_dsa.pub 如果两个文件你都没有，到第二步，否则，步到第三步

第二步：生成一个新的SSH Key
为了生成一个新的SSH Key，复制粘贴下面的文本，确保替换为你的电子邮件地址。默认设置是首选的，所以当你被

问到“输入一个文件来保存密钥”，只要按下回车键继续就行。

$ ssh-keygen -t rsa -C your-email

$ 询问保存目录，直接回车

下一步，你会被要求输入一个密码。

提示：我们强烈建议使用一个好的，安全的密码，到Working with SSH Key passphrases查看更多信息。

$ 输入密码

$ 再次输入密码，要求两次一致。

你应该会得到如下信息：

信息提示你生成成功，密钥保存在哪里，指纹码是多少。

然后添加你的密钥到ssh-agent.

$ eval `ssh-agent -s`

$ ssh-add ~/.ssh/id_rsa

这会要求你输入 生成密钥时的密码，反正我操作时提示了（这句是我加的）

第三步：添加你的SSH Key 到GitHub
运行以下命令复制key到你的剪贴板。

$ clip < ~/.ssh/id_rsa.pub

另一种选择，可以使用你最喜欢的文本编辑器，手动打开文件并复制内容到剪贴板。

现在你已经复制了密钥，是时候把它添加到GitHub了。

1、在任意GitHub页面顶部右角落用户面板处。点击Account settings.

2、点击左侧边栏SSH Keys按钮。

3、点击Add SSH Key

4、在标题域，为一个新的密钥添加一个描述，例如，如果你正在使用个人的MAC，你可以叫这个密钥“个上Mac Book...”

5、粘贴你的密钥到Key域。

6、点击Add Key

7、输入你的GitHub密码确认这个动作。

第四步：测试所有输出
确保所有事情正常运行，你现在要尝试一下SSH连接GitHub，当你做此动作时，你会被要求用你之前创建的密码来授权这

个动作。打开你的Git Bash，输入 ：

$ ssh -T git@github.com

#尝试用ssh连接github

你也许会看到如这样的警告：

..................

不要担心，意料之中，检验终端 中的指纹码是否和我们上面提供的指纹码。然后输入yes

提示信息，连接成功..................

如果用户名是你的用户名，你已经成功设置了你的SSH Key，不要担心"shell access"这个事，反正你不希望这样。

如果你收到一个信息"access denied"(访问拒绝),你可以读诊断这个问题的介绍


如果你正要从HTTPS切换到SSH，你会需要更新你的远程仓库地址。

查看"Changing a remote's RUL"(改变远程URL)以得到更多信息。（同样移步我翻译的文章改变GitHub远程地址）
